<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo-auto-category分类文件夹不显示问题</title>
    <url>/post/986feafd/</url>
    <content><![CDATA[<h2 id="测试过程">测试过程</h2>
<p>环境：Hexo 5.4.0，WIN10 20H2</p>
<p>建立一个文件夹并建立新文档</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210613/image.iuj4qu9une0.png" alt="image"></p>
<ol>
<li>
<p>先在本地<code>hexo clean &amp; hexo g</code>，查看<code>[BlogSource]\public\categories\</code>下是否出现需要的分类文件夹</p>
<p>结果：未出现</p>
</li>
<li>
<p><code>hexo s</code>查看本地网页是否有分类文件夹显示</p>
<p>结果：有。这里就很奇怪，显示的路径下在本地文件中并不存在</p>
</li>
</ol>
<p>问题可能在下图中的<code>Generated: categories [null]</code>这里，原因未知，abbrlink并未出错</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210613/image.6dxori9ufjg0.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210613/image.1yyv0ib3zkv4.png" alt="image"></p>
<p>尝试以下流程：</p>
<ul>
<li>hexo clean</li>
<li>hexo g</li>
<li>hexo g</li>
</ul>
<p>结果出现了应有的分类文件夹</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210613/image.2uw8cg08qbm0.png" alt="image"></p>
<p><code>hexo s </code>查看本地网页同样正确</p>
<p>最后：修改github action的workflow文件，写入两次<code>hexo g</code>，生成网页后查看结果正确</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210613/image.7eiu9rwjiak0.png" alt="image"></p>
<p>具体原因未知，方案可用</p>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>插件测试</category>
      </categories>
  </entry>
  <entry>
    <title>EPIC客户端安装提示错误EOS-ERR-1603</title>
    <url>/post/7a209fd7/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210627/image.5m2frveube80.png" alt="image"></p>
<p>在C:\Program Files (x86)里，创建Epic Games文件夹，然后从EPIC更新即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210627/image-20210707210839801.2ontyrhr24o0.png" alt="image-20210707210839801"></p>
]]></content>
      <categories>
        <category>引擎</category>
      </categories>
      <tags>
        <tag>引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>DCC工具链</title>
    <url>/post/a43a01f3/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>DCC</category>
      </categories>
  </entry>
  <entry>
    <title>爬虫实践</title>
    <url>/post/ae6cda05/</url>
    <content><![CDATA[<h2 id="豆瓣">豆瓣</h2>
<p>在pycharm run界面中搜索 ctrl+f</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.2sqg120ywk40.png" alt="image"></p>
<p>选择需要的数据</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.6ib8agpx1m80.png" alt="image"></p>
<p>起始标签</p>
<p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210611204140299.png" alt="image-20210611204140299"></p>
<p>代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拿到网页源代码 requests</span></span><br><span class="line"><span class="comment"># 通过re来提取想要的有效信息 re</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> csv  <span class="comment"># 以 , 做分割</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://movie.douban.com/top250&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.get(url, headers=headers)</span><br><span class="line">page_content = resp.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析数据,选择起始标签,.*？过滤空白</span></span><br><span class="line">obj = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;li&gt;.*?&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;&#x27;</span></span><br><span class="line">                 <span class="string">r&#x27;(?P&lt;name&gt;.*?)&lt;/span&gt;.*?&lt;p class=&quot;&quot;&gt;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp.*?&#x27;</span></span><br><span class="line">                 <span class="string">r&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(?P&lt;score&gt;.*?)&lt;/span&gt;&#x27;</span></span><br><span class="line">                 <span class="string">r&#x27;.*?&lt;span&gt;(?P&lt;num&gt;.*?)人评价&lt;/span&gt;&#x27;</span>, re.S)</span><br><span class="line"><span class="comment"># 开始匹配</span></span><br><span class="line">result = obj.finditer(page_content)</span><br><span class="line"><span class="comment"># 准备文件，写入</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;data.csv&quot;</span>, mode=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">csvwriter = csv.writer(f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> result:</span><br><span class="line">    <span class="comment"># print(it.group(&quot;name&quot;))</span></span><br><span class="line">    <span class="comment"># print(it.group(&quot;year&quot;).strip())</span></span><br><span class="line">    <span class="comment"># print(it.group(&quot;score&quot;))</span></span><br><span class="line">    <span class="comment"># print(it.group(&quot;num&quot;))</span></span><br><span class="line">    dic = it.groupdict()</span><br><span class="line">    dic[<span class="string">&#x27;year&#x27;</span>] = dic[<span class="string">&#x27;year&#x27;</span>].strip()  <span class="comment"># 因为year前有&lt;br&gt;换行符</span></span><br><span class="line">    csvwriter.writerow(dic.values())</span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br><span class="line">resp.close()</span><br></pre></td></tr></table></figure>
<p>结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">肖申克的救赎,1994,9.7,2367456</span><br><span class="line"></span><br><span class="line">霸王别姬,1993,9.6,1762938</span><br><span class="line"></span><br><span class="line">阿甘正传,1994,9.5,1783969</span><br><span class="line"></span><br><span class="line">这个杀手不太冷,1994,9.4,1956540</span><br><span class="line"></span><br><span class="line">泰坦尼克号,1997,9.4,1744908</span><br><span class="line"></span><br><span class="line">美丽人生,1997,9.5,1096478</span><br><span class="line"></span><br><span class="line">千与千寻,2001,9.4,1860281</span><br><span class="line"></span><br><span class="line">辛德勒的名单,1993,9.5,910424</span><br><span class="line"></span><br><span class="line">盗梦空间,2010,9.3,1720536</span><br><span class="line"></span><br><span class="line">忠犬八公的故事,2009,9.4,1181974</span><br><span class="line"></span><br><span class="line">星际穿越,2014,9.3,1393187</span><br><span class="line"></span><br><span class="line">楚门的世界,1998,9.3,1309969</span><br><span class="line"></span><br><span class="line">海上钢琴师,1998,9.3,1397593</span><br><span class="line"></span><br><span class="line">三傻大闹宝莱坞,2009,9.2,1570301</span><br><span class="line"></span><br><span class="line">机器人总动员,2008,9.3,1104595</span><br><span class="line"></span><br><span class="line">放牛班的春天,2004,9.3,1089081</span><br><span class="line"></span><br><span class="line">无间道,2002,9.3,1060992</span><br><span class="line"></span><br><span class="line">疯狂动物城,2016,9.2,1538596</span><br><span class="line"></span><br><span class="line">大话西游之大圣娶亲,1995,9.2,1272075</span><br><span class="line"></span><br><span class="line">熔炉,2011,9.3,771963</span><br><span class="line"></span><br><span class="line">教父,1972,9.3,774119</span><br><span class="line"></span><br><span class="line">当幸福来敲门,2006,9.1,1262580</span><br><span class="line"></span><br><span class="line">龙猫,1988,9.2,1053336</span><br><span class="line"></span><br><span class="line">怦然心动,2010,9.1,1495535</span><br><span class="line"></span><br><span class="line">控方证人,1957,9.6,372429</span><br></pre></td></tr></table></figure>
<h2 id="电影天堂">电影天堂</h2>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
      </categories>
  </entry>
  <entry>
    <title>数据解析</title>
    <url>/post/b9218251/</url>
    <content><![CDATA[<p>大多数情况下，我们并不需要整个网页的内容，只是需要那么一小部分，这就涉及到了数据提取的问题</p>
<h2 id="re解析">re解析</h2>
<p>正则表达式</p>
<p>抓取到的网页源代码本质上就是一个超长的字符串，想从里面提取内容。用正则很合适</p>
<p>[[正则表达式]]</p>
<h2 id="bs4解析">bs4解析</h2>
<h2 id="xpath解析">xpath解析</h2>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
      </categories>
  </entry>
  <entry>
    <title>Web请求过程剖析</title>
    <url>/post/70e43cff/</url>
    <content><![CDATA[<h2 id="Web请求全过程">Web请求全过程</h2>
<p>请求到返回</p>
<p>在返回结果中便将信息写在html中，再进行渲染</p>
<ul>
<li>
<p>服务器渲染：在服务器中直接把数据和html整合在一起，统一返回给浏览器</p>
<p>在页面源代码中能看到数据</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.183cr1a8lbcw.png" alt="image"></p>
</li>
<li>
<p>客户端渲染：第一次请求不会返回数据只给一个html骨架，第二次要数据才会返回，并在客户端完成页面拼合</p>
<p>第一次请求返回结果</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.6il9um56p5g0.png" alt="image"></p>
<p>在页面源代码中看不到数据，但能看到数据的url</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.kmttn8km9ds.png" alt="image"></p>
<blockquote>
<p>熟练使用浏览器抓包工具，数据具有规则性</p>
</blockquote>
<p>第二次请求返回数据，这里返回的数据和骨架拼合</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.3iswlrgov9k0.png" alt="image"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP协议</title>
    <url>/post/af3eed3c/</url>
    <content><![CDATA[<p><strong>http或https</strong></p>
<p>url传输的时候遵循的协议</p>
<p>协议：就是两个计算机之间为了能够流畅的进行沟通而设置的一个君子协定。常见的协议有TCP/IP SOAP协议，HTTP协议，SMTP协议等算.…</p>
<p>HTTP协议，Hyper Text Transfer Protocol（超文本传输协议）的缩写，是用于从万维网（www:World Wide Web)服务器传输超文本到本地浏览器的传送协议.直白点儿，就是浏览器和服务器之间的数据交互遵守的就是HTTP协议.</p>
<p>HTTP协议把一条消息分为三大块内容。无论是请求还是响应都是三块内容</p>
<p>请求头中最常见的一些重要内容（爬虫需要）：</p>
<ol>
<li>
<p>User-Agent：请求载体的身份标识（用啥发送的请求）</p>
</li>
<li>
<p>Referer：防盗链（这次请求是从哪个页面来的？反爬会用到）</p>
</li>
<li>
<p>cookie：本地字符串数据信息（用户登录信息，反爬的token)</p>
</li>
</ol>
<p>响应头中一些重要的内容：</p>
<ol>
<li>
<p>cookie：本地字符串数据信息（用户登录信息，反爬的token)</p>
</li>
<li>
<p>各种神奇的莫名其妙的字符串（这个需要经验了，一般都是token字样，防止各种攻击和反爬）</p>
</li>
</ol>
<p>请求方式：</p>
<p>​	GET：显式提交，网站搜索内容</p>
<p>​	POST：隐式提交，对服务器数据更改之类</p>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
      </categories>
  </entry>
  <entry>
    <title>python爬虫学习之始</title>
    <url>/post/9987b8b8/</url>
    <content><![CDATA[<h2 id="问题">问题</h2>
<p>使用anaconda制作环境时，提示<code>environment location direction is not empty</code>，是因为之前已经创建过这个项目，导致有存留</p>
<p>在<code>C:\Anaconda\envs</code>目录下删掉之前项目即可</p>
<h2 id="开始">开始</h2>
<p>爬虫君子协议：robots.txt</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.7a2qkyu0f4o0.png" alt="image"></p>
<p>尽量不做恶意爬虫</p>
<h3 id="注意环境变量添加好">注意环境变量添加好</h3>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.1w877xnxknls.png" alt="image"></p>
<p>如果输入python打开了微软商店，记得将这个变量路径下移</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.ee3of1phyz.png" alt="image"></p>
<h2 id="注意编码方式">注意编码方式</h2>
<p>unicode不能作为存储和传输，需要编码 gbk或utf-8，所以爬取的内容是乱码就需要注意编码方式</p>
<p>win系统默认 gbk ，而多数内容默认utf-8，在爬取后要进行按utf-8编码打开</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.2bj0amw5ujy8.png" alt="image"></p>
<p>百度爬取是http协议，不是https</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.247io0lsm5gg.png" alt="image"></p>
<h2 id="第一个爬虫">第一个爬虫</h2>
<p>爬虫：通过编写程序来获取到互联网上的资源</p>
<p>b’代表字节，需要在python中解码，且下文中有提到 charset=utf-8</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.7bic09lp3rk0.png" alt="image"></p>
<p><code>print(resp.read().decode(&quot;utf-8&quot;))</code>解码后</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.1ea6ezrih0f4.png" alt="image"></p>
<h3 id="获取百度页面源代码">获取百度页面源代码</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需求：用程序模拟浏览器。输入一个网址。从该网址中获取到资源或者内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line">resp = urlopen(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;mybaidu.html&quot;</span>, mode=<span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(resp.read().decode(<span class="string">&quot;utf-8&quot;</span>))  <span class="comment"># 读取网页的页面源代码</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;over&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
      </categories>
      <tags>
        <tag>python爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>requests入门</title>
    <url>/post/f782b17c/</url>
    <content><![CDATA[<h2 id="安装模块">安装模块</h2>
<p>安装requests，<code>pip install requests</code></p>
<p>可以直接在pycharm的终端中安装</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.2cc1ze7sv8kk.png" alt="image"></p>
<p>网络问题可以去国内源下载 <code>pip install -i https://xxx</code></p>
<h2 id="简单爬虫">简单爬虫</h2>
<p>在浏览器地址栏中的链接都是使用的GET方式提交</p>
<p><code>resp.</code>可获取网页中请求的不同内容</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.1iabv2y6c1uo.png" alt="image"></p>
<p>结果被浏览器认为是程序发出的请求，需要绕过</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.2viz6775icu0.png" alt="image"></p>
<p>获取user-Agent，模拟成正常浏览器</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.3v90jwvbcgo0.png" alt="image"></p>
<p>添加一个变量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.sogou.com/web?query=周杰伦&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数是一个字典</span></span><br><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 简单处理一个反爬</span></span><br><span class="line">resp = requests.get(url, headers=dic)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(resp)</span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br></pre></td></tr></table></figure>
<h2 id="通用化">通用化</h2>
<h3 id="GET方式">GET方式</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">query = <span class="built_in">input</span>(<span class="string">&quot;请输入名称：&quot;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">f&#x27;https://www.sogou.com/web?query=<span class="subst">&#123;query&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数是一个字典</span></span><br><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单处理一个反爬</span></span><br><span class="line">resp = requests.get(url, headers=dic)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(resp)</span><br><span class="line"><span class="built_in">print</span>(resp.text) <span class="comment"># 拿到网页源代码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="post方式">post方式</h3>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.5vyhf8z4l580.png" alt="image"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;https://fanyi.baidu.com/sug&quot;</span></span><br><span class="line"></span><br><span class="line">s = <span class="built_in">input</span>(<span class="string">&quot;请输入要翻译的英文单词：&quot;</span>)</span><br><span class="line">dat = &#123;</span><br><span class="line">    <span class="string">&quot;kw&quot;</span>: s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送post请求，发送的数据必须放在字典中，通过data参数进行传递</span></span><br><span class="line">resp = requests.post(url,data=dat)</span><br><span class="line"><span class="built_in">print</span>(resp.json()) <span class="comment"># 将服务器返回的内容直接处理成json(), =》 dict</span></span><br></pre></td></tr></table></figure>
<p>XHR等过滤器</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210609/image.7fcvemeiwxg0.png" alt="image"></p>
<p><code>Request URL: https://movie.douban.com/j/chart/top_list?type=24&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20</code></p>
<p>?前面是url，后面是参数</p>
<p>三大块：</p>
<ul>
<li>
<p>url</p>
</li>
<li>
<p>请求方式</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.6iz23xc6iys0.png" alt="image"></p>
</li>
<li>
<p>参数</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.ftts0qo2gvs.png" alt="image"></p>
</li>
</ul>
<p>如果不能用双引号等直接把字符串等包起来，就打开这里</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.2fukxerjb47w.png" alt="image"></p>
<p>pycharm运行结果不自动换行，打开这里</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.50x44cpicwg0.png" alt="image"></p>
<p>加载新数据会更改start的值</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/20210610/image.1hsb6klj77y8.png" alt="image"></p>
<h3 id="封装参数-处理反爬">封装参数/处理反爬</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第三个</span></span><br><span class="line">url = <span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span></span><br><span class="line"><span class="comment"># 如果get请求参数太长，需要重新封装参数</span></span><br><span class="line"><span class="comment"># ?type=24&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20</span></span><br><span class="line">param = &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;24&quot;</span>,</span><br><span class="line">    <span class="string">&quot;interval_id&quot;</span>: <span class="string">&quot;100:90&quot;</span>,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;limit&quot;</span>: <span class="string">&quot;20&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">resp = requests.get(url=url,params=param,headers=headers)</span><br><span class="line"><span class="comment"># 执行结果：https://movie.douban.com/j/chart/top_list?type=24&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20</span></span><br><span class="line"><span class="comment"># print(resp.request.url)</span></span><br><span class="line"><span class="comment"># 若结果为空，则被反爬</span></span><br><span class="line"><span class="comment"># 第一个尝试user Agent</span></span><br><span class="line"><span class="comment"># print(resp.text)</span></span><br><span class="line"><span class="comment"># 结果：&#123;&#x27;User-Agent&#x27;: &#x27;python-requests/2.25.1&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;*/*&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;&#125;</span></span><br><span class="line"><span class="comment"># print(resp.request.headers)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(resp.text)</span><br><span class="line"><span class="comment"># 记得关闭resp</span></span><br><span class="line">resp.close()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序</category>
        <category>python爬虫</category>
        <category>request</category>
      </categories>
  </entry>
  <entry>
    <title>配置PWA后布署失败的解决方式</title>
    <url>/post/b6596b48/</url>
    <content><![CDATA[<p>在配置 好PWA最后布署页面的时候，如果已经 hexo s 生成本地页面的话，会在<code>.git/hooks</code> 目录下生成一个 <code>pre-commit</code> 文件，这时如果发布到 github 的话(这里使用Github Desktop)，就会出现 <code>error: cannot spawn .git/hooks/pre-commit: No such file or directory</code> 的提示，导致无法发布</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603020534035.png" alt="image-20210603020534035"></p>
<p>删掉这个文件就可以了</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603020244305.png" alt="image-20210603020244305"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>文档编写问题</title>
    <url>/post/d92ccc1a/</url>
    <content><![CDATA[<h2 id="站内引用文章失效">站内引用文章失效</h2>
<p>原因还未知</p>
<h2 id="按空格会删除后面文字">按空格会删除后面文字</h2>
<p>看看是不是看了insert模式，在键盘del和home之间的ins按一下就恢复</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title>毛玻璃效果制作</title>
    <url>/post/ba71baad/</url>
    <content><![CDATA[<h2 id=""></h2>
<div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>点击查看参考教程</span></div>
    <div class="hide-content"><p>糖果屋-Custom Beautify <a class="btn-beautify button--animated outline larger" href="https://akilar.top/posts/ebf20e02/" 
  title="糖果屋"><i class="far fa-hand-point-right"></i><span>糖果屋</span></a></p>
<p>零奇部落阁-毛玻璃效果<a class="btn-beautify button--animated outline larger" href="https://www.zyskys.com/posts/1ee3" 
  title="零奇部落阁"><i class="far fa-hand-point-right"></i><span>零奇部落阁</span></a></p>
</div></div>
<p>GodLin’s Blog-backdrop-filter毛玻璃效果<a class="btn-beautify button--animated outline larger" href="https://www.crushing.xyz/posts/317c.html" 
  title="GodLin's Blog"><i class="far fa-hand-point-right"></i><span>GodLin's Blog</span></a></p>
<p>使用工具<a class="btn-beautify button--animated purple larger" href="https://glassmorphism.com/" 
  title="glassmorphism"><i class="far fa-hand-point-right"></i><span>glassmorphism</span></a></p>
<h2 id="具体操作">具体操作</h2>
<p>先定义一个<code>custom.css</code>文件，具体做法参考  糖果屋-Custom Beautify <a class="btn-beautify button--animated " href="https://akilar.top/posts/ebf20e02/" 
  title="糖果屋"><i class="far fa-hand-point-right"></i><span>糖果屋</span></a></p>
<p>找到每个模块对应的名称，部分取自糖果屋-Custom Beautify <a class="btn-beautify button--animated " href="https://akilar.top/posts/ebf20e02/" 
  title="糖果屋"><span>糖果屋</span></a>，部分从以下路径查找<code>Blogroot\themes\butterfly\layout\includes</code></p>
<p>例如需要侧边栏的分类卡片区域</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603194836108.png" alt="image-20210603194836108"></p>
<p>在浏览器中按F12打开开发者工具，点击选取工具</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604125148723.png" alt="image-20210604125148723"></p>
<p>选择分类卡片外边框，得到其名称</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604125314649.png" alt="image-20210604125314649"></p>
<p>将获得的名称填入<code>custom.css</code>中</p>
<p>这里会碰到一个问题，大部分区域按以上获得的名称是可以直接使用的，但此处的侧边栏卡片多数好还需要修改下图中的文件</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604125848807.png" alt="image-20210604125848807"></p>
<p>将红框处修改为<code>.card-widget#card-categories</code>保存</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604130035639.png" alt="image-20210604130035639"></p>
<p>可看到毛玻璃效果正常显示的区域，名称格式是这样的</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604130433670.png" alt="image-20210604130433670"></p>
<p>所以在<code>custom.css</code>中分类卡片代码写为</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604130520407.png" alt="image-20210604130520407"></p>
<p>打开<a class="btn-beautify button--animated " href="https://glassmorphism.com/" 
  title="glassmorphism"><i class="far fa-hand-point-right"></i><span>glassmorphism</span></a>工具，复制调好效果的代码</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603195215937.png" alt="image-20210603195215937"></p>
<p>打开custom.css文件，粘贴到{}之间</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604125653783.png" alt="image-20210604125653783"></p>
<p><code>hexo s </code>在本地查看效果，可看到已经达到毛玻璃效果</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604130718726.png" alt="image-20210604130718726"></p>
<p>其他需要修改的名称位置如下，可根据路径按以上方法自行修改</p>
<p>每个可选取的区域都可以改不同的毛玻璃效果，相互配合能达到很奇妙的效果，看个人设计了</p>
<table>
<thead>
<tr>
<th>F12结果</th>
<th style="text-align:left">路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>div.card-widget.card-info</td>
<td style="text-align:left">themes\butterfly\layout\includes\widget\card_author.pug</td>
</tr>
<tr>
<td>div.card-widget.card-announce-ment</td>
<td style="text-align:left">如上 widget\card_announcement.pug</td>
</tr>
<tr>
<td>div.card-widget.card-recent-post</td>
<td style="text-align:left">如上 widget\card_recent_post.pug</td>
</tr>
<tr>
<td>div.card-widget.card-tags</td>
<td style="text-align:left">如上 widget\card_tags.pug</td>
</tr>
<tr>
<td>div.card-widget.card-archives</td>
<td style="text-align:left">如上 widget\card_archives.pug</td>
</tr>
<tr>
<td>div.card-widget.card-webinfo</td>
<td style="text-align:left">如上 widget\card_webinfo.pug</td>
</tr>
</tbody>
</table>
<h2 id="修改毛玻璃失败">修改毛玻璃失败</h2>
<p>就这两个区域失败了，经过试验，侧边栏这边因为技术限制，不建议做毛玻璃，需要半透明就直接改.card-widget透明度即可，效果比毛玻璃更好</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604141108743.png" alt="image-20210604141108743"></p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604141120184.png" alt="image-20210604141120184"></p>
<p>问题所在：</p>
<p>毛玻璃是用来filter滤镜属性的blur效果，而filter会破坏堆叠样式结构。导致它的子元素的各种display属性和position属性失效。因为其本身就是在其他堆叠样式之后才添加的css属性，兼容前面的已经弃用的样式是多余的</p>
<p>css按照官方的说法是弃用了旧版的css属性，但是浏览器还在支持这旧版已经弃用的css属性</p>
<h3 id="解决方式">解决方式</h3>
<p>继续毛玻璃方案暂时做不到了，但可以直接改透明度</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>)<span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>最终效果很令人满意，在半透明基础上还有了差异化，十分和谐</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210604142021137.png" alt="image-20210604142021137"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>网站配置注意点</title>
    <url>/post/28f332e5/</url>
    <content><![CDATA[<h2 id="Front-matter写法">Front-matter写法</h2>
<p>每个单词后冒号必须是英文，且冒号后必须有一个空格<br>
记得每次写新文章，要把date填上时间，否则文章会不断的显示为最新时间，更新文章是尽量写update吧</p>
<h2 id="PWA和网站提示更新">PWA和网站提示更新</h2>
<p>pwa的实质其实是惰性加载。你看到的提示更新是为了应对这种惰性加载的手段，通过监测站点内容是否变动，弹窗提示你更新</p>
<h2 id="本地重新配置主题颜色和背景图没变化">本地重新配置主题颜色和背景图没变化</h2>
<p>原因是没有清理浏览器缓存，清除后重新<code>hexo s</code>即可看到已经变化</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603063013336.png" alt="image-20210603063013336"></p>
<h2 id="一图流注意点">一图流注意点</h2>
<p>在做完删除<code>banner</code>以下的图片路径后，必须把源文件也删除，否则<code>hexo g</code>的时候还会生成图片，会发现删掉的图片一直在那里挡住背景图片</p>
<h2 id="front-matter突然自动排序等奇怪问题">front matter突然自动排序等奇怪问题</h2>
<p>不要在本地<code>hexo s</code>后编辑文章，否则会实时又变动，导致文章编辑出错</p>
<h2 id="css快速修改">css快速修改</h2>
<p>F12界面要好好利用，css样式大都可以在这里进行调试</p>
<blockquote>
<p>【店长】Akilar 14:05:08<br>
选中，线上调试。能行了再加到自定义样式里</p>
<p>【店长】Akilar 14:05:12<br>
要是发现还是不行。</p>
<p>【店长】Akilar 14:05:32<br>
那可能是权值不一样。在样式后面加 !important 强调权值</p>
</blockquote>
<h2 id="使用artstation的图片问题">使用artstation的图片问题</h2>
<p>最好不要直接拿artstation或者其他国外无法直接访问的图片链接，否则因为国内网络问题，会访问失败，表现为网站背景一片白色</p>
<p>将其图片下载，传到github图床中，用ImgBot压缩下即可</p>
<h2 id="修改部分主题配置后不显示或刷新消失的问题">修改部分主题配置后不显示或刷新消失的问题</h2>
<p>若做了PWA，看是否已经安装成了app，这个会保存一部分加载好的样式，会导致类似修改css等文件后，打开网站不显示效果的情况</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>PicGo探索</title>
    <url>/post/38f64154/</url>
    <content><![CDATA[<h2 id="上传后删除测试">上传后删除测试</h2>
<p>更新：</p>
<ul>
<li>Akilar店长：从仓库删去到github的缓存被清空是有一段缓冲期的。这期间你确实还有可能访问到被删除的图片。另一种可能是你是通过发布release的，那样的话你的图片还存在release里。删除当前仓库的图片不会对已经发布的release造成任何影响。</li>
<li>失效时间等待：大概10小时左右失效</li>
</ul>
<blockquote>
<p>原文章内容：可证明的是当图片上传至github后，即使在github中删除，这里的url同样有效，原因还未知</p>
<p>如以下这两张图片，搜索链接还能找到</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">empty_gallery</span>](<span class="link">https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/20210602043808.jpeg</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/20210602043808.jpeg" alt="empty_gallery"></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">hayward-gallery-50th-anniversary-03</span>](<span class="link">https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/20210602043813.jpg</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/20210602043813.jpg" alt="hayward-gallery-50th-anniversary-03"></p>
<h2 id="同名上传测试">同名上传测试</h2>
<p>当上传至一个文件夹下时PicGo会报错，上传失败</p>
<ul>
<li>希望以后能覆盖上传</li>
</ul>
<p>切换上传文件夹后可行，如以下两张图片</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Snipaste_2021-05-28_20-06-34</span>](<span class="link">https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/Snipaste_2021-05-28_20-06-34.png</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/Snipaste_2021-05-28_20-06-34.png" alt="Snipaste_2021-05-28_20-06-34"></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Snipaste_2021-05-28_20-06-34</span>](<span class="link">https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/Snipaste_2021-05-28_20-06-34.png</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/img/Snipaste_2021-05-28_20-06-34.png" alt="Snipaste_2021-05-28_20-06-34"></p>
<p>经测试，我更喜欢按写文章的日期切换上传文件夹，这样在github中整理的更清晰，文件PicGo提供了时间戳重命名功能，但我觉得那个看着实在不明确，当图片有问题去github查找太难了，保留图片名字的差异化最好。虽然PicGo也提供了上传前手动重命名的选项，但太麻烦，不够优雅</p>
<blockquote>
<p>上面方式也有一个问题，就是图片在github查找时排序不是按上传时间排列的，而是按名字排序，会导致从时间顺序查找不方便，方法还需要斟酌。</p>
</blockquote>
<h2 id="间歇性上传失败">间歇性上传失败</h2>
<p>之前成功上传过，突然就不能上传了，显示端口失效等问题</p>
<p>打开PicGo的<strong>设置-设置server</strong></p>
<p><img src="https://raw.githubusercontent.com/talesov/picbed/master/img/20200222203320.png" alt=""></p>
<p>把这个开关，开换成关，关换成开，原因未知</p>
<p><img src="https://raw.githubusercontent.com/talesov/picbed/master/img/20200222203337.png" alt=""></p>
<h2 id="上传后未返回url">上传后未返回url</h2>
<p>看看是不是上一张图片还没传完返回，就开始传下一张了</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>字体设置</title>
    <url>/post/4271b0f6/</url>
    <content><![CDATA[<h2 id="获取谷歌在线字体">获取谷歌在线字体</h2>
<a class="btn-beautify button--animated outline larger" href="https://fonts.google.com/" 
  title="fonts.google"><i class="far fa-hand-point-right"></i><span>fonts.google</span></a>
<p>可能会出现点击这里浏览器右边没有弹窗，这时需要刷新这个页面</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603043507039.png" alt="image-20210603043507039"></p>
<p>再次点击select按钮就可以看到正常界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210603043609362.png" alt="image-20210603043609362"></p>
<h2 id="详细教程">详细教程</h2>
<p>请跳转糖果屋<a class="btn-beautify button--animated " href="https://akilar.top/posts/ebf20e02/" 
  title="糖果屋"><span>糖果屋</span></a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-auto-category插件问题</title>
    <url>/post/c8b7dc96/</url>
    <content><![CDATA[<h2 id="2021-6-2存在问题">2021.6.2存在问题</h2>
<p>在6月2号的四天前刚刚修复了<code>err: TypeError: tmpPost.categories.join is not a function </code>的问题</p>
<p>具体原因是在front matter时，categories需要特定的格式，如下，不能写成<code>categories: 空页面</code></p>
<ul>
<li>单层级文件夹如下</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 空页面</span><br><span class="line">tags: 空页面</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 空页面</span><br></pre></td></tr></table></figure>
<ul>
<li>多层级文件夹如下</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 空页面-1</span><br><span class="line">tags: 空页面</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> test</span><br><span class="line"><span class="bullet">  -</span> 空页面</span><br></pre></td></tr></table></figure>
<h3 id="多重分类失效">多重分类失效</h3>
<p>手动分类测试：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 空页面-1</span><br><span class="line">tags: 空页面</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> [空页面]</span><br><span class="line"><span class="bullet">  -</span> [code]</span><br></pre></td></tr></table></figure>
<p>插件会自动替换原来手动写好的分类，按文件夹层级重写</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 空页面-1</span><br><span class="line">tags: 空页面</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> test</span><br><span class="line"><span class="bullet">  -</span> 空页面</span><br></pre></td></tr></table></figure>
<p>网站界面一直保持如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets/2021-6-2/image-20210602192639352.png" alt="image-20210602192639352"></p>
<p>对于想要多重分类标记的文章，建议使用标签，标签格式相同，但不存在这个层级问题，具体可查看<a href="https://hexo.io/zh-cn/docs/front-matter">Hexo文档</a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo插件</tag>
      </tags>
  </entry>
  <entry>
    <title>npm图床设置和问题</title>
    <url>/post/28daef73/</url>
    <content><![CDATA[<h2 id="基于店长Akilar的方法设置npm">基于店长Akilar的方法设置npm</h2>
<p>糖果屋跳转 <a class="btn-beautify button--animated larger" href="https://akilar.top/posts/3e956346/" 
  title="糖果屋"><i class="far fa-hand-point-right"></i><span>糖果屋</span></a></p>
<h2 id="问题">问题</h2>
<p>npm图床用github action发布，平时action需要关闭的，因为每次更新npm都得改版本号，否则每次上传图片导致master变动，action都会执行发布，在需要的时候打开发布一次即可</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>npm</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>博客美化与功能添加</title>
    <url>/post/c66d090/</url>
    <content><![CDATA[<h2 id="高级配置">高级配置</h2>
<h3 id="随机文章跳转">随机文章跳转</h3>
<p>方法取自 <a class="btn-beautify button--animated " href="https://blog.hclonely.com/posts/57bd67ce/" 
  title="HCLonely"><span>HCLonely</span></a></p>
<p>客根目录/scripts(没有请自行创建)下新建random.js文件，内容如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo.extend.generator.register(<span class="string">&#x27;random&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> config = hexo.config.random || &#123;&#125;</span><br><span class="line">  <span class="keyword">const</span> posts = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> post <span class="keyword">of</span> locals.posts.data) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.random !== <span class="literal">false</span>) posts.push(post.path)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">path</span>: config.path || <span class="string">&#x27;random/index.html&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">`&lt;html&gt;&lt;head&gt;&lt;script&gt;var posts=<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(posts)&#125;</span>;window.open(&#x27;/&#x27;+posts[Math.floor(Math.random() * posts.length)],&quot;_self&quot;)&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>在 主题配置文件中的<code>menu</code>下添加 <code>随机文章: /random/ || fas fa-random</code></p>
<blockquote>
<p>如果不想随机跳转到某篇文章，只需在这篇文章Front-matter添加random: false</p>
</blockquote>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title>Test-2</title>
    <url>/post/b580d7ee/</url>
    <content><![CDATA[<h2 id="引用站内其他文章">引用站内其他文章</h2>
<a href="#">Post not found: test</a>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/post/dc4c1419/</url>
    <content><![CDATA[<h1>xxx</h1>
<h2 id="相对路径显示图片">相对路径显示图片</h2>
<p>已放弃，改为图床</p>
<p><img src="test/photo.png" alt="photo"></p>
<div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>Butterfly安装方法</span></div>
    <div class="hide-content"><p>在你的博客根目录里</p>
<p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p>
<p>如果想要安装比较新的dev分支，可以</p>
<p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p>
</div></div>
<h2 id="mermaid">mermaid</h2>
<div class="mermaid">pie
    title Key elements in Product X
    &quot;Calcium&quot; : 42.96
    &quot;Potassium&quot; : 50.05
    &quot;Magnesium&quot; : 10.01
    &quot;Iron&quot; :  5</div>
<h2 id="tabs">tabs</h2>
<div class="tabs" id="nico"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#nico-1">nico 1</button></li><li class="tab"><button type="button" data-href="#nico-2">nico 2</button></li><li class="tab"><button type="button" data-href="#nico-3">nico 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="nico-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="nico-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="nico-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h2 id="button">button</h2>
<p>This is my website, click the button <a class="btn-beautify button--animated " href="https://butterfly.js.org/" 
  title="Butterfly"><span>Butterfly</span></a><br>
This is my website, click the button <a class="btn-beautify button--animated " href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>
This is my website, click the button <a class="btn-beautify button--animated outline" href="https://butterfly.js.org/" 
  title="Butterfly"><span>Butterfly</span></a><br>
This is my website, click the button <a class="btn-beautify button--animated outline" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>
This is my website, click the button <a class="btn-beautify button--animated larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p>
<a class="btn-beautify button--animated larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated blue larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated pink larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated red larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated purple larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated orange larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated green larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<div class="btn-center">
<a class="btn-beautify button--animated outline larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline blue larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline pink larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline red larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline purple larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline orange larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify button--animated outline green larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
</div>
## inlineImg
<p>你看我长得漂亮不</p>
<p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png" alt=""></p>
<p>我觉得很漂亮 <img class="inline-img" src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px"/></p>
<h2 id="label">label</h2>
<p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>
宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>
<h2 id="测试图片功能">测试图片功能</h2>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssetsPicx@master/20210605/guillaume-neumann-labirynthe.50n63swl74g0.jpg" alt="guillaume-neumann-labirynthe"></p>
<p><img src="https://cdn.jsdelivr.net/gh/zyu0/BlogAssets@master/lou-ll-maids-take-off-shoes-40.3yuzk8znmpm0.jpg" alt="lou-ll-maids-take-off-shoes-40"></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
